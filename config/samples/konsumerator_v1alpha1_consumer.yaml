apiVersion: konsumerator.lwolf.org/v1alpha1
kind: Consumer
metadata:
  name: consumer-sample
spec:
  numPartitions: 10
  name: "test-consumer"
  namespace: "default"
  autoscaler:
    # only one provider type prometheus is supported at the moment
    # dummy provider returns random lag value in range [0,350] for
    # testing purposes
    provider: "dummy"
    # do not scale up if the lag is less than 5 minutes
    maxAllowedLag: "5m"
    # minimum allowed period to query remote datasources for the lag
    # information to avoid DDoS of that service
    lagSyncPeriod: "1m"
    # criticalLag is some value close to the SLO.
    # if lag has reached this point, autoscaler will
    # give maximum allowed resource to that deployment
    criticalLag: "30m"
  # DeploymentSpec to run the consumer
  # NOTE: replicas will always be overridden to 1 and deploymentStrategy
  # set to Recreate
  # TODO: current assumption is that deployment contains only one container
  # so resources are being set to all of them. This should be fixed by
  # adding container-name selector to allow sidecars.
  deploymentTemplate:
    # replicas will be replaced with 1
    replicas: 10
    selector:
      matchLabels:
        app: my-dep
    template:
      metadata:
        labels:
          app: my-dep
      spec:
        containers:
          - image: busybox
            name: busybox
            command: ["/bin/sh", "-ec", "sleep 1000"]
  resources:
    default:
      cpu: "100m"
      memory: "100Mi"
    limit:
      cpu: "1"
      memory: "1Gi"
